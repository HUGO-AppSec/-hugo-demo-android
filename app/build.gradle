/*
 * Copyright (c) 2015 Jonas Kalderstam.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
// apply plugin: 'kotlin-android' we don't use kotlin for this app

android {
    compileSdk 35
    namespace "com.nononsenseapps.notepad" // for R.*

    buildFeatures {
        buildConfig true
        // replaces part of the androidannotations library. See mBinding in java classes
        viewBinding true
        // allow declaring different string resources for different buildTypes
        resValues true
        // these features are useless for us
        compose false
        aidl false
        renderScript false
        shaders false
    }

    lint {
        htmlReport false // TODO re-enable and fix all warnings reported in the html file
        textReport false
        abortOnError false
        explainIssues true
        checkTestSources true
        // turn off checking the given issue id's
        disable += ['RtlHardcoded', 'ApplySharedPref']
    }

    packagingOptions {
        resources {
            // excludes += ['META-INF/LICENSE.txt', 'META-INF/NOTICE.txt']
        }
    }

    if (project.hasProperty('STORE_FILE')) {
        signingConfigs {
            release {
                storeFile file(STORE_FILE)
                storePassword STORE_PASSWORD
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
            }
        }
    } else {
        // println "No key store defined. Signed release not available..."
    }

    defaultConfig {
        applicationId "com.nononsenseapps.notepad"
        targetSdkVersion 35

        // most people have at least android 7.1 anyway: https://apilevels.com/
        // 90% of users are on API>=27 => don't write special code for 23<=API<=26, it's worthless
        minSdkVersion 23

        // If these values remain static, incremental builds are optimized and faster.
        // Also, FDROID is happier. Update them only with ./release.sh
        versionCode 72000
        versionName "7.2.0"

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments disableAnalytics: 'true'

        javaCompileOptions {
            annotationProcessorOptions {
                // you need these to make org.androidannotations:androidannotations compile
                // in "playStore" build type.
                // TODO get rid of androidannotations and delete this javaCompileOptions {...}
                arguments = [
                        "resourcePackageName": android.defaultConfig.applicationId,
                        "androidManifestFile": "$projectDir/src/main/AndroidManifest.xml".toString()
                ]
            }
        }
    }

    // disable code shrinking in debug, enable it in release mode
    buildTypes {
        debug {
            // identify the debug version to allow installing it
            // alongside the fdroid or play store version
            applicationIdSuffix ".debug"
            versionNameSuffix "-Debug"

            minifyEnabled false
            shrinkResources false
            pseudoLocalesEnabled true
            // TODO test https://developer.android.com/guide/topics/resources/pseudolocales
            // just to make gradle shut up about missing classes
            proguardFiles 'proguard.pro'

            // to install the play store and fdroid versions simultaneously, content provider
            // authorities must be unique => define one for xml files
            resValue "string", "NnnAuthority_1", defaultConfig.applicationId + applicationIdSuffix + ".MyContentAuthority"
        }
        release {
            // the FDROID release, where we CAN'T use applicationIdSuffix or versionNameSuffix

            // enable R8
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.pro'
            if (project.hasProperty('STORE_FILE')) {
                signingConfig signingConfigs.release
            }

            /// to install the play store and fdroid versions simultaneously, content provider
            // authorities must be unique => define one for xml and for java
            resValue "string", "NnnAuthority_1", defaultConfig.applicationId + ".MyContentAuthority"
        }
        playStore {
            // a RELEASE build for the google play store. The ONLY difference is the package name,
            // which lets you install this app alongside the version from f-droid
            applicationIdSuffix ".play"
            versionNameSuffix "-Play"
            // enable R8
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.pro'
            if (project.hasProperty('STORE_FILE')) {
                signingConfig signingConfigs.release
            }
            // This is a sorted list of fallback build types used when a dependency does not
            // include a "playStore" build type. The plugin selects the first build type available
            // in the dependency. So this will use the "release" mode of drag-sort-listview for
            // our "playStore" profile
            matchingFallbacks = ['release', 'debug']

            // to install the play store and fdroid versions simultaneously, content provider
            // authorities must be unique => define one for xml and for java
            resValue "string", "NnnAuthority_1", defaultConfig.applicationId + applicationIdSuffix + ".MyContentAuthority"
        }
    }

    testOptions {
        // androidx espresso tests require this
        animationsDisabled true
    }

    compileOptions {
        // enable support for new language APIs in old devices
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    // kotlinOptions { jvmTarget = 17 } // compile kotlin to the same JAVA 17

    // control which types of configuration APKs you want your
    // app bundle to support
    bundle {
        language {
            // download ALL languages, because we have
            // a built-in language picker
            enableSplit = false
        }
    }
}

dependencies {
    // AndroidX
    implementation "androidx.cursoradapter:cursoradapter:1.0.0"
    implementation 'androidx.fragment:fragment:1.8.5'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation "androidx.preference:preference:1.2.1"
    implementation "androidx.startup:startup-runtime:1.2.0"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.material:material:1.12.0'
    // Time library, open source & up to date
    implementation 'joda-time:joda-time:2.12.7'
    // Dashclock API, open source & abandoned, but it still works
    implementation 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    // Writes org files, open source & abandoned, but it still works
    implementation 'org.cowboyprogrammer.orgparser:orgparser:1.3.1'
    // for manual list sorting, local source copy, open source & abandoned
    implementation project(':external:drag-sort-listview')
    // for highlighting functionality on 1Â° launch, open source & up to date
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.13.3'
    // from deleted branch 'version6'
    implementation project(path: ':contract')
    // for ListenableFuture<>
    implementation 'com.google.guava:guava:32.1.3-android'
    // annotations library, open source & abandoned
    annotationProcessor "org.androidannotations:androidannotations:4.8.0"
    implementation "org.androidannotations:androidannotations-api:4.8.0"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.3'
    // Tests libraries
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.6.1'
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.6.1"
    androidTestUtil "androidx.test.services:test-services:1.5.0"
    // no kotlin!
    // implementation "org.jetbrains.kotlin:kotlin-stdlib:1.7.20"
}
